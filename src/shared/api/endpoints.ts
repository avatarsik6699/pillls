/**
 * Generated by orval v7.1.1 üç∫
 * Do not edit manually.
 * –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
 * –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ –∑–∞–ø—Ä–æ—Å–∞–º
 * OpenAPI spec version: 1.0
 */
import type { BodyType } from "./http-client";
import { customInstance } from "./http-client";
import type {
  Position,
  PositionFindOneParams,
  PositionsListBodyDto,
  PositionsListResponseDto,
  ProductFindAllParams,
  ProductsListResponseDto,
  Tip,
  TipFindAllParams,
} from "./models";

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

export const positionFindAll = (
  positionsListBodyDto: BodyType<PositionsListBodyDto>,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<PositionsListResponseDto>(
    {
      url: `/api/position/list`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: positionsListBodyDto,
    },
    options
  );
};

export const positionFindOne = (
  positionId: string,
  params: PositionFindOneParams,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<Position>(
    { url: `/api/position/one/${positionId}`, method: "GET", params },
    options
  );
};

export const tipFindAll = (
  params: TipFindAllParams,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<Tip[]>(
    { url: `/api/tip/list`, method: "GET", params },
    options
  );
};

export const productFindAll = (
  params: ProductFindAllParams,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<ProductsListResponseDto>(
    { url: `/api/product/list`, method: "GET", params },
    options
  );
};

export type PositionFindAllResult = NonNullable<
  Awaited<ReturnType<typeof positionFindAll>>
>;
export type PositionFindOneResult = NonNullable<
  Awaited<ReturnType<typeof positionFindOne>>
>;
export type TipFindAllResult = NonNullable<
  Awaited<ReturnType<typeof tipFindAll>>
>;
export type ProductFindAllResult = NonNullable<
  Awaited<ReturnType<typeof productFindAll>>
>;
